name: app-build

on:
  workflow_call:
    inputs:
      go_version:
        required: false
        type: string
        default: '1.24'
      node_version:
        required: false
        type: string
        default: '20'
      java_version:
        required: false
        type: string
        default: '11'
      ant_version:
        required: false
        type: string
        default: '1.10.15'
      java_tool_options:
        required: false
        type: string
        default: '-Dfile.encoding=UTF8'

permissions:
  contents: read

env:
  # don't auto-upgrade the gotoolchain
  # https://github.com/docker-library/golang/issues/472
  GOTOOLCHAIN: local

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
    env:
      GO_VERSION: ${{ inputs.go_version }}
      NODE_VERSION: ${{ inputs.node_version }}
      JAVA_VERSION: ${{ inputs.java_version }}
      ANT_VERSION: ${{ inputs.ant_version }}
      JAVA_TOOL_OPTIONS: ${{ inputs.java_tool_options }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      -
        name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      -
        name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}
      -
        name: Set up ANT
        uses: cedx/setup-ant@1ea448efb6c44f086dce6e3634cfd1a5bcc3aeb9 # v4.2.0
        with:
          version: ${{ env.ANT_VERSION }}
      -
        name: Java version
        run: |
          java -XshowSettings:properties -version
      -
        name: ANT version
        run: |
          ant -version
      -
        name: Node version
        run: |
          node --version
      -
        name: Config
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          echo "$(go env GOPATH)/bin/windows_386" >> $GITHUB_PATH
          echo "PORTAPPS_VERSION=$(cat go.mod | grep github.com/portapps/portapps | awk '{print $NF}')" >> $GITHUB_ENV
          echo "PORTAPPS_DIR=./.portapps" >> $GITHUB_ENV
        shell: bash
      -
        name: Checkout core
        uses: actions/checkout@v4
        with:
          repository: portapps/portapps
          ref: ${{ env.PORTAPPS_VERSION }}
          path: ${{ env.PORTAPPS_DIR }}
      -
        name: Cache Portapps bin
        uses: actions/cache@v4
        with:
          path: ${{ env.PORTAPPS_DIR }}/bin
          key: portapps-bin-${{ env.PORTAPPS_VERSION }}
      -
        name: Build
        run: |
          ant release -Dcore.dir=${{ env.PORTAPPS_DIR }}
        shell: bash
      -
        name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: bin/release/*

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      # required to create a GitHub release
      contents: write
    steps:
      -
        name: Prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "GIT_TAGNAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
      -
        name: Download assets
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: ./bin/release
      -
        name: List artifacts
        run: |
          tree -nh ./bin/release
      -
        name: GitHub Release
        uses: softprops/action-gh-release@d5382d3e6f2fa7bd53cb749d33091853d4985daf # v2.3.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            bin/release/*
          name: ${{ env.GIT_TAGNAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
